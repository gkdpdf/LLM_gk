name: crazibrain retail BOT container

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build-and-publish:
    runs-on: ubuntu-latest
    outputs:
      tag: ${{ steps.set_tag.outputs.tag }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set Commit Message Tag
        id: set_tag
        run: |
          COMMIT_MESSAGE_TAG=$(echo "${{ github.event.head_commit.message }}" | tr -cd '[:alnum:]-_')
          echo "Tag set to: ${COMMIT_MESSAGE_TAG}"
          echo "tag=${COMMIT_MESSAGE_TAG}" >> "$GITHUB_OUTPUT"

      - name: Get Current Date and Time
        id: current_datetime
        run: |
          CURRENT_DATETIME=$(date +"%Y-%m-%dT%H:%M:%S")
          echo "datetime=${CURRENT_DATETIME}" >> "$GITHUB_OUTPUT"

      - name: Get Commit Author
        id: commit_author
        run: |
          COMMIT_AUTHOR="${{ github.event.head_commit.author.name }}"
          COMMIT_EMAIL="${{ github.event.head_commit.author.email }}"
          echo "author=${COMMIT_AUTHOR}" >> "$GITHUB_OUTPUT"
          echo "email=${COMMIT_EMAIL}" >> "$GITHUB_OUTPUT"

      - name: Build Docker Image
        run: |
          docker build . \
            --file Dockerfile \
            --tag themadrastechie/crazibrain-retail-llm-bot:${{ steps.set_tag.outputs.tag }} \
            --build-arg APP_VERSION=${{ steps.set_tag.outputs.tag }} \
            --build-arg BUILD_DATETIME=${{ steps.current_datetime.outputs.datetime }} \
            --build-arg COMMIT_AUTHOR="${{ steps.commit_author.outputs.author }}" \
            --build-arg COMMIT_EMAIL="${{ steps.commit_author.outputs.email }}" \
            --progress=plain

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Push Docker Image
        run: |
          docker push themadrastechie/crazibrain-retail-llm-bot:${{ steps.set_tag.outputs.tag }}

  deploy:
    needs: build-and-publish
    runs-on: ubuntu-latest

    steps:
      - name: Setup SSH Key
        run: |
          echo "${{ secrets.SSH_KEY }}" > sundar_file.pem
          chmod 600 sundar_file.pem

      - name: Deploy on Remote Server
        env:
          TAG: ${{ needs.build-and-publish.outputs.tag }}
        run: |
          ssh -o StrictHostKeyChecking=no -i sundar_file.pem ubuntu@ec2-54-156-183-69.compute-1.amazonaws.com << 'EOF'
            echo "Pulling Docker image with tag: ${TAG}"
            docker pull themadrastechie/crazibrain-retail-llm-bot:${TAG}

            if docker ps -a --format '{{.Names}}' | grep -Eq '^crazibrain-retail-llm-bot-container$'; then
              echo "Stopping and removing existing container..."
              docker stop crazibrain-retail-llm-bot-container
              docker rm crazibrain-retail-llm-bot-container
            fi

            echo "Running new Docker container with Streamlit port mapping..."
            docker run -d \
              --name crazibrain-retail-llm-bot-container \
              -p 8025:8501 \
              themadrastechie/crazibrain-retail-llm-bot:${TAG}

            echo "Cleaning up unused Docker images..."
            docker image prune -a -f

            echo "âœ… Deployment completed."
          EOF
